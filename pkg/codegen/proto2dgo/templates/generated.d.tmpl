// Code generated by proto2dgo. DO NOT EDIT.

package {{.GoPackage}}

import (
	"context"

	custom_nats "github.com/hoangdaochuz/ecommerce-microservice-golang/pkg/custom-nats"
	//{{range .ImportPath}}"github.com/hoangdaochuz/ecommerce-microservice-golang/apps/{{.}}"
	//{{end}}
)

// NATS subject constants
const (
	NATS_SUBJECT = "{{.NatsSubject}}"
	{{range .ProtoModel.Services}}
	{{range .Methods}}
	{{.ConstantName}} = NATS_SUBJECT + "/{{.Name}}"
	{{end}}
	{{end}}
)

// Enum definitions
{{range .ProtoModel.Enums}}
// {{.Name}} represents the {{.Name}} enum type
type {{.Name}} string

const (
	{{$enumName := .Name}}{{range .EnumFields}}
	{{.Key}} {{$enumName}} = "{{.Key}}"
	{{end}}
)
{{end}}

{{range .ProtoModel.Services}}
// {{.Name}} defines the service interface
type {{.Name}} interface {
	{{range .Methods}}
	{{.Name}}(ctx context.Context, req *{{.RequestType}}) (*{{.ResponseType}}, error)
	{{end}}
}

// {{.Name}}Proxy wraps the service implementation
type {{.Name}}Proxy struct {
	service {{.Name}}
}

// New{{.Name}}Proxy creates a new {{.Name}}Proxy instance
func New{{.Name}}Proxy(service {{.Name}}) *{{.Name}}Proxy {
	return &{{.Name}}Proxy{
		service: service,
	}
}

{{$serviceName := .Name}}{{range .Methods}}
// {{.Name}} delegates the call to the underlying service
func (p *{{$serviceName}}Proxy) {{.Name}}(ctx context.Context, req *{{.RequestType}}) (*{{.ResponseType}}, error) {
	return p.service.{{.Name}}(ctx, req)
}
{{end}}

// {{.Name}}Router handles NATS routing for {{.Name}} service
type {{.Name}}Router struct {
	proxy *{{.Name}}Proxy
}

// New{{.Name}}Router creates a new {{.Name}}Router instance
func New{{.Name}}Router(proxy *{{.Name}}Proxy) *{{.Name}}Router {
	return &{{.Name}}Router{
		proxy: proxy,
	}
}

// Register registers all service methods with the NATS router
func (r *{{.Name}}Router) Register(natsRouter custom_nats.Router) {
	{{range .Methods}}
	natsRouter.RegisterRoute("POST", {{.ConstantName}}, r.proxy.{{.Name}})
	{{end}}
}
{{end}}





